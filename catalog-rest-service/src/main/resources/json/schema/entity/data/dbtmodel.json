{
  "$id": "https://open-metadata.org/schema/entity/data/dbtmodel.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "DbtModel",
  "description": "This schema defines the DbtModel entity. A DbtModel organizes data modeling details , sql and columns ",
  "type": "object",
  "javaType": "org.openmetadata.catalog.entity.data.DbtModel",
  "definitions": {
    "dbtNodeType": {
      "javaType": "org.openmetadata.catalog.type.DbtNodeType",
      "description": "This schema defines the type used for describing different types of Nodes in DBT.",
      "type": "string",
      "enum": [
        "Seed",
        "Model"
      ],
      "javaEnums": [
        {
          "name": "Seed"
        },
        {
          "name": "Model"
        }
      ]
    },
    "dbtCatalogType": {
      "javaType": "org.openmetadata.catalog.type.DbtCatalogType",
      "description": "This schema defines the type used for describing different catalog type.",
      "type": "string",
      "enum": [
        "BaseTable"
      ],
      "javaEnums": [
        {
          "name": "BaseTable"
        }
      ]
    },
    "dbtMaterializationType": {
      "javaType": "org.openmetadata.catalog.type.DbtMaterializationType",
      "description": "This schema defines the type used for describing different materialization type.",
      "type": "string",
      "enum": [
        "Table",
        "Seed"
      ],
      "javaEnums": [
        {
          "name": "BaseTable"
        },
        {
          "name": "Seed"
        }
      ]
    },
    "dbtModelName": {
      "description": "Local name (not fully qualified name) of a table.",
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "pattern": "^[^.]*$"
    },
    "fullyQualifiedColumnName": {
      "description": "Fully qualified name of the column that includes `serviceName.databaseName.tableName.columnName[.nestedColumnName]`. When columnName is null for dataType struct fields, `field_#` where `#` is field index is used. For map dataType, for key the field name `key` is used and for the value field `value` is used.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    }
  },
  "properties": {
    "id": {
      "description": "Unique identifier of this model instance.",
      "$ref": "../../type/basic.json#/definitions/uuid"
    },
    "name": {
      "description": "Name of a model. Expected to be unique within a database.",
      "$ref": "#/definitions/dbtModelName"
    },
    "displayName": {
      "description": "Display Name that identifies this model. It could be title or label from the source services.",
      "type": "string"
    },
    "fullyQualifiedName": {
      "description": "Fully qualified name of a model in the form `serviceName.databaseName.dbtModelName`.",
      "type": "string"
    },
    "description": {
      "description": "Description of a DBT Model.",
      "type": "string"
    },
    "version" : {
      "description": "Metadata version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/entityVersion"
    },
    "updatedAt" : {
      "description": "Last update time corresponding to the new version of the entity.",
      "$ref": "../../type/basic.json#/definitions/dateTime"
    },
    "updatedBy" : {
      "description": "User who made the update.",
      "type": "string"
    },
    "href": {
      "description": "Link to this table resource.",
      "$ref": "../../type/basic.json#/definitions/href"
    },
    "dbtNodeType": {
      "$ref": "#/definitions/dbtNodeType"
    },
    "dbtCatalogType": {
      "$ref": "#/definitions/dbtCatalogType"
    },
    "dbtMaterializationType": {
      "$ref": "#/definitions/dbtMaterializationType"
    },
    "columns": {
      "description": "Columns in this DBT Model.",
      "type": "array",
      "items": {
        "$ref": "./table.json#/definitions/column"
      },
      "default": null
    },
    "owner": {
      "description": "Owner of this DBT Model.",
      "$ref": "../../type/entityReference.json",
      "default": null
    },
    "database": {
      "description": "Reference to Database that uses this DBT Model.",
      "$ref": "../../type/entityReference.json"
    },
    "viewDefinition": {
      "description": "View Definition in SQL.",
      "$ref": "../../type/basic.json#/definitions/sqlQuery"
    },
    "tags": {
      "description": "Tags for this DBT.",
      "type": "array",
      "items": {
        "$ref": "../../type/tagLabel.json"
      },
      "default": null
    },
      "followers": {
      "description": "Followers of this table.",
      "$ref": "../../type/entityReference.json#/definitions/entityReferenceList"
    },
    "changeDescription": {
      "description" : "Change that lead to this version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/changeDescription"
    }
  },
  "required": [
    "id",
    "name",
    "columns"
  ],
  "additionalProperties": false
}
