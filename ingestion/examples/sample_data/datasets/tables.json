{
  "tables": [
    {
      "id": "02e7ede6-9cd5-4190-9c36-3fae6b2cbac8",
      "name": "raw_customer",
      "tableType": "Regular",
      "description": "This is a raw customers table as represented in our online DB. This contains personal, shipping and billing addresses and details of the customer store and customer profile. This table is used to build our dimensional and fact tables",
     "columns": [
      {
        "name": "comments",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 1
      },
      {
        "name": "creditcard",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 2
      },
      {
        "name": "customer",
        "dataType": "STRUCT",
        "dataLength": 1,
        "dataTypeDisplay": "struct<username:character varying(32),name:character varying(32),sex:char(1),address:character varying(128),mail:character varying(64),birthdate:character varying(16)>",
        "constraint": "NULL",
        "ordinalPosition": 3,
        "children": [
          {
            "name": "username",
            "dataType": "VARCHAR",
            "dataLength": 32,
            "dataTypeDisplay": "character varying(32)",
            "constraint": "NULL"
          },
          {
            "name": "name",
            "dataType": "VARCHAR",
            "dataLength": 32,
            "dataTypeDisplay": "character varying(32)",
            "constraint": "NULL"
          },
          {
            "name": "sex",
            "dataType": "CHAR",
            "dataLength": 1,
            "dataTypeDisplay": "char(1)",
            "constraint": "NULL"
          },
          {
            "name": "address",
            "dataType": "VARCHAR",
            "dataLength": 128,
            "dataTypeDisplay": "character varying(128)",
            "constraint": "NULL"
          },
          {
            "name": "mail",
            "dataType": "VARCHAR",
            "dataLength": 64,
            "dataTypeDisplay": "character varying(64)",
            "constraint": "NULL"
          },
          {
            "name": "birthdate",
            "dataType": "VARCHAR",
            "dataLength": 16,
            "dataTypeDisplay": "character varying(16)",
            "constraint": "NULL"
          }
        ]
      },
      {
        "name": "membership",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 4
      },
      {
        "name": "orders",
        "dataType": "ARRAY",
        "arrayDataType": "STRUCT",
        "dataLength": 1,
        "dataTypeDisplay": "array<struct<product_id:character varying(24),price:int,onsale:boolean,tax:int,weight:int,others:int,vendor:character varying(64)>>",
        "constraint": "NULL",
        "ordinalPosition": 5
      },
      {
        "name": "platform",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 6
      },
      {
        "name": "preference",
        "dataType": "MAP",
        "dataLength": 1,
        "dataTypeDisplay": "map&lt;character varying(32),boolean&gt;",
        "constraint": "NULL",
        "ordinalPosition": 7
      },
      {
        "name": "shipping_address",
        "dataType": "ARRAY",
        "arrayDataType": "STRUCT",
        "dataLength": 1,
        "dataTypeDisplay": "array<struct<name:character varying(32),street_address:character varying(128),city:character varying(32),postcode:character varying(8)>>",
        "constraint": "NULL",
        "ordinalPosition": 8
      },
      {
        "name": "shipping_date",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 9
      },
      {
        "name": "transaction_date",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 10
      }
    ],
    "database": {
      "id": "89229e26-7f74-4443-a568-85512eaeaa07",
      "type": "database"
    },
    "tags": null,
    "joins": null
    },
    {
      "id": "02e7ede6-9cd5-4190-9c36-3fae6b2cbac8",
      "name": "raw_order",
      "tableType": "Regular",
      "description": "This is a raw orders table as represented in our online DB. This table contains all the orders by the customers and can be used to buid our dim and fact tables",
      "fullyQualifiedName": "bigquery.shopify.raw_order",
     "columns": [
      {
        "name": "comments",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 1
      },
      {
        "name": "creditcard",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 2
      },
      {
        "name": "membership",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 4
      },
      {
        "name": "orders",
        "dataType": "ARRAY",
        "arrayDataType": "STRUCT",
        "dataLength": 1,
        "dataTypeDisplay": "array<struct<product_id:character varying(24),price:int,onsale:boolean,tax:int,weight:int,others:int,vendor:character varying(64)>>",
        "constraint": "NULL",
        "ordinalPosition": 5
      },
      {
        "name": "platform",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 6
      },
      {
        "name": "preference",
        "dataType": "MAP",
        "dataLength": 1,
        "dataTypeDisplay": "map&lt;character varying(32),boolean&gt;",
        "constraint": "NULL",
        "ordinalPosition": 7
      },
      {
        "name": "shipping_address",
        "dataType": "ARRAY",
        "arrayDataType": "STRUCT",
        "dataLength": 1,
        "dataTypeDisplay": "array<struct<name:character varying(32),street_address:character varying(128),city:character varying(32),postcode:character varying(8)>>",
        "constraint": "NULL",
        "ordinalPosition": 8
      },
      {
        "name": "shipping_date",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 9
      },
      {
        "name": "transaction_date",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 10
      },
      {
        "name": "total_order_count",
        "dataType": "NUMERIC",
        "description": "The total number of orders that the customer has made from this store across their lifetime.",
        "tags": null,
        "ordinalPosition": 11
      },
      {
        "name": "total_order_value",
        "dataType": "NUMERIC",
        "description": "The total amount of money that the customer has spent on orders from the store across their lifetime. The value is formatted in the store's currency.",
        "tags": null,
        "ordinalPosition": 12
      },
      {
        "name": "first_order_date",
        "dataType": "TIMESTAMP",
        "description": "The date (ISO 8601) and time (UTC) when the customer placed their first order. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
        "tags": null,
        "ordinalPosition": 13
      },
      {
        "name": "last_order_date",
        "dataType": "TIMESTAMP",
        "description": "The date (ISO 8601) and time (UTC) when the customer placed their most recent order. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
        "tags": null,
        "ordinalPosition": 14
      }
     ],
    "database": {
      "id": "89229e26-7f74-4443-a568-85512eaeaa07",
      "type": "database"
    },
    "tags": null,
    "joins": null
    },
     {
      "id": "02e7ede6-9cd5-4190-9c36-3fae6b2cbac8",
      "name": "raw_product_catalog",
      "tableType": "Regular",
      "description": "This is a raw product catalog table contains the product listing, price, seller etc.. represented in our online DB. ",
      "fullyQualifiedName": "bigquery.shopify.raw_product_catalog",
     "columns": [
      {
        "name": "comments",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 1
      },
      {
        "name": "products",
        "dataType": "ARRAY",
        "arrayDataType": "STRUCT",
        "dataLength": 1,
        "dataTypeDisplay": "array<struct<product_id:character varying(24),price:int,onsale:boolean,tax:int,weight:int,others:int,vendor:character varying(64), stock:int>>",
        "constraint": "NULL",
        "ordinalPosition": 2
      },
      {
        "name": "platform",
        "dataType": "STRING",
        "dataLength": 1,
        "dataTypeDisplay": "string",
        "constraint": "NULL",
        "ordinalPosition": 3
      },
      {
        "name": "store_address",
        "dataType": "ARRAY",
        "arrayDataType": "STRUCT",
        "dataLength": 1,
        "dataTypeDisplay": "array<struct<name:character varying(32),street_address:character varying(128),city:character varying(32),postcode:character varying(8)>>",
        "constraint": "NULL",
        "ordinalPosition": 4
      },
      {
        "name": "first_order_date",
        "dataType": "TIMESTAMP",
        "description": "The date (ISO 8601) and time (UTC) when the customer placed their first order. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
        "tags": null,
        "ordinalPosition": 5
      },
      {
        "name": "last_order_date",
        "dataType": "TIMESTAMP",
        "description": "The date (ISO 8601) and time (UTC) when the customer placed their most recent order. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
        "tags": null,
        "ordinalPosition": 6
      }
     ],
    "database": {
      "id": "89229e26-7f74-4443-a568-85512eaeaa07",
      "type": "database"
    },
    "tags": null,
    "joins": null
    },
    {
      "id": "02e7ede6-9cd5-4190-9c36-3fae6b2cbac8",
      "name": "dim_address",
      "tableType": "Regular",
      "description": "This dimension table contains the billing and shipping addresses of customers. You can join this table with the sales table to generate lists of the billing and shipping addresses. Customers can enter their addresses more than once, so the same address can appear in more than one row in this table. This table contains one row per customer address.",
      "fullyQualifiedName": "bigquery.shopify.dim_address",
      "columns": [
        {
          "name": "address_id",
          "dataType": "NUMERIC",
          "description": "Unique identifier for the address.",
          "tags": null,
          "constraint": "PRIMARY_KEY",
          "ordinalPosition": 1
        },
        {
          "name": "shop_id",
          "dataType": "NUMERIC",
          "description": "The ID of the store. This column is a foreign key reference to the shop_id column in the dim_shop table.",
          "tags": null,
          "ordinalPosition": 2
        },
        {
          "name": "first_name",
          "dataType": "VARCHAR",
          "description": "First name of the customer.",
          "tags": null,
          "dataLength": 100,
          "ordinalPosition": 3
        },
        {
          "name": "last_name",
          "dataType": "VARCHAR",
          "description": "Last name of the customer.",
          "tags": null,
          "dataLength": 100,
          "ordinalPosition": 4
        },
        {
          "name": "address1",
          "dataType": "VARCHAR",
          "description": "The first address line. For example, 150 Elgin St.",
          "dataLength": 500,
          "tags": null,
          "ordinalPosition": 5
        },
        {
          "name": "address2",
          "dataType": "VARCHAR",
          "description": "The second address line. For example, Suite 800.",
          "dataLength": 500,
          "tags": null,
          "ordinalPosition": 6
        },
        {
          "name": "company",
          "dataType": "VARCHAR",
          "description": "The name of the customer's business, if one exists.",
          "dataLength": 100,
          "tags": null,
          "ordinalPosition": 7
        },
        {
          "name": "city",
          "dataType": "VARCHAR",
          "description": "The name of the city. For example, Palo Alto.",
          "dataLength": 100,
          "tags": null,
          "ordinalPosition": 8
        },
        {
          "name": "region",
          "dataType": "VARCHAR",
          "description": "The name of the region, such as a province or state, where the customer is located. For example, Ontario or New York. This column is the same as CustomerAddress.province in the Admin API.",
          "dataLength": 512,
          "tags": null,
          "ordinalPosition": 9
        },
        {
          "name": "zip",
          "dataType": "VARCHAR",
          "description": "The ZIP or postal code. For example, 90210.",
          "dataLength": 10,
          "tags": null,
          "ordinalPosition": 10
        },
        {
          "name": "country",
          "dataType": "VARCHAR",
          "description": "The full name of the country. For example, Canada.",
          "tags": null,
          "dataLength": 50,
          "ordinalPosition": 11
        },
        {
          "name": "phone",
          "dataType": "VARCHAR",
          "description": "The phone number of the customer.",
          "tags": null,
          "dataLength": 15,
          "ordinalPosition": 12
        }
      ],
      "database": {
        "id": "89229e26-7f74-4443-a568-85512eaeaa07",
        "type": "database"
      },
      "tags": null,
      "joins": null
    },
    {
      "id": "02e7ede6-9cd5-4190-9c36-3fae6b2cbac8",
      "name": "dim_api_client",
      "tableType": "Regular",
      "description": "This dimension table contains a row for each channel or app that your customers use to create orders. Some examples of these include Facebook and Online Store. You can join this table with the sales table to measure channel performance.",
      "fullyQualifiedName": "bigquery.shopify.dim_api_client",
      "columns": [
        {
          "name": "api_client_id",
          "dataType": "NUMERIC",
          "description": "ID of the API client that called the Shopify API. For example, the ID for the online store is 580111.",
          "tags": null,
          "ordinalPosition": 1
        },
        {
          "name": "title",
          "dataType": "VARCHAR",
          "description": "Full name of the app or channel. For example, Point of Sale, Online Store.",
          "tags": null,
          "dataLength": 100,
          "ordinalPosition": 2
        }
      ],

      "database": {
        "id": "89229e26-7f74-4443-a568-85512eaeaa07",
        "type": "database"
      },
      "tags": null,
      "joins": null
    },
    {
      "id": "c4be7688-7810-45cc-b17c-3409243d71ee",
      "name": "dim_customer",
      "tableType": "Regular",
      "description": "The dimension table contains data about your customers. The customers table contains one row per customer. It includes historical metrics (such as the total amount that each customer has spent in your store) as well as forward-looking metrics (such as the predicted number of days between future orders and the expected order value in the next 30 days). This table also includes columns that segment customers into various categories (such as new, returning, promising, at risk, dormant, and loyal), which you can use to target marketing activities.",
      "fullyQualifiedName": "bigquery.shopify.dim_customer",
      "columns": [
        {
          "name": "customer_id",
          "dataType": "NUMERIC",
          "description": "The ID of the customer. This is the primary key column for this table.",
          "tags": null,
          "constraint": "PRIMARY_KEY",
          "ordinalPosition": 1
        },
        {
          "name": "shop_id",
          "dataType": "NUMERIC",
          "description": "The ID of the store. This column is a foreign key reference to the shop_id column in the dim_shop table.",
          "tags": null,
          "ordinalPosition": 2
        },
        {
          "name": "average_order_size",
          "dataType": "NUMERIC",
          "description": "The average amount of money that the customer spends on orders from the store. The value is formatted in the store's currency and it is calculated using the following formula: total_order_value / total_order_count.",
          "tags": null,
          "ordinalPosition": 3
        },
        {
          "name": "total_order_count",
          "dataType": "NUMERIC",
          "description": "The total number of orders that the customer has made from this store across their lifetime.",
          "tags": null,
          "ordinalPosition": 4
        },
        {
          "name": "total_order_value",
          "dataType": "NUMERIC",
          "description": "The total amount of money that the customer has spent on orders from the store across their lifetime. The value is formatted in the store's currency.",
          "tags": null,
          "ordinalPosition": 5
        },
        {
          "name": "first_order_date",
          "dataType": "TIMESTAMP",
          "description": "The date (ISO 8601) and time (UTC) when the customer placed their first order. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 6
        },
        {
          "name": "last_order_date",
          "dataType": "TIMESTAMP",
          "description": "The date (ISO 8601) and time (UTC) when the customer placed their most recent order. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 7
        },
        {
          "name": "rank",
          "dataType": "NUMERIC",
          "description": "A numeric ranking of the customer's lifetime value for the store relative to all customers.",
          "tags": null,
          "ordinalPosition": 8
        },
        {
          "name": "new",
          "dataType": "BOOLEAN",
          "description": "Returns true if the customer made their first order in the last 30 days. Otherwise returns false.",
          "tags": null,
          "ordinalPosition": 9
        },
        {
          "name": "returning",
          "dataType": "BOOLEAN",
          "description": "Returns true when the customer has made more than one order. Returns false when the customer has made one order only. Returns Null when the customer exists in Shopify, but they have not made any orders. For example, this column can be null because the customer provided their contact information and then abandoned the checkout. Customers can also be created manually in the Shopify admin and by apps that use the Admin API.",
          "tags": null,
          "ordinalPosition": 10
        },
        {
          "name": "loyal",
          "dataType": "BOOLEAN",
          "description": "Returns true when the customer has a high probability of returning, and has placed more orders than the average customer. Otherwise returns false.",
          "tags": null,
          "ordinalPosition": 11
        },
        {
          "name": "at_risk",
          "dataType": "BOOLEAN",
          "description": "Returns true for repeat customers, who have a medium probability of returning and have not placed an order in a while. Otherwise returns false.",
          "tags": null,
          "ordinalPosition": 12
        },
        {
          "name": "dormant",
          "dataType": "BOOLEAN",
          "description": "Returns true when the customer has a very low probability of returning to make another purchase. Otherwise returns false.",
          "tags": null,
          "ordinalPosition": 13
        },
        {
          "name": "promising",
          "dataType": "BOOLEAN",
          "description": "Returns true when the customer has a high probability of returning and becoming a loyal customer. Otherwise returns false.",
          "tags": null,
          "ordinalPosition": 14
        },
        {
          "name": "predicted_average_number_of_days_between_orders",
          "dataType": "NUMERIC",
          "description": "The predicated number of days between future orders.",
          "tags": null,
          "ordinalPosition": 15
        },
        {
          "name": "expected_purchase_value_in_next_30_days",
          "dataType": "NUMERIC",
          "description": "The total purchase amount of the orders that the customer is expected to make in the next 30 days. The value is formatted in the store's currency.",
          "tags": null,
          "ordinalPosition": 16
        },
        {
          "name": "first_name",
          "dataType": "VARCHAR",
          "description": "The first name of the customer.",
          "tags": null,
          "dataLength": 100,
          "ordinalPosition": 17
        },
        {
          "name": "last_name",
          "dataType": "VARCHAR",
          "description": "The last name of the customer.",
          "tags": null,
          "dataLength": 100,
          "ordinalPosition": 18
        },
        {
          "name": "city",
          "dataType": "VARCHAR",
          "description": "The city from the customer's billing address. For example, Topeka.",
          "tags": null,
          "dataLength": 100,
          "ordinalPosition": 19
        },
        {
          "name": "region",
          "dataType": "VARCHAR",
          "description": "The name of the region, such as the province or state, from the customer's billing address. For example, Alberta, Florida. This column is the same as CustomerAddress.province in the Admin API.",
          "tags": null,
          "dataLength": 100,
          "ordinalPosition": 20
        },
        {
          "name": "country",
          "dataType": "VARCHAR",
          "description": "The country from the customer's billing address. For example, United States.",
          "tags": null,
          "dataLength": 100,
          "ordinalPosition": 21
        },
        {
          "name": "email",
          "dataType": "VARCHAR",
          "description": "The email of the customer.",
          "tags": null,
          "dataLength": 100,
          "ordinalPosition": 22
        },
        {
          "name": "phone",
          "dataType": "VARCHAR",
          "description": "The phone number of the customer.",
          "tags": null,
          "dataLength": 15,
          "ordinalPosition": 23
        },
        {
          "name": "verified_email",
          "dataType": "BOOLEAN",
          "description": "Returns true when the customer's email has been verified. Otherwise returns false.",
          "tags": null,
          "dataLength": 15,
          "ordinalPosition": 24
        },
        {
          "name": "created_at",
          "dataType": "TIMESTAMP",
          "description": "The date (ISO 8601) and time (UTC) when the customer was added to the store. The format is YYYY-MM-DD HH:mm:ss (for example, 2018-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 25
        },
        {
          "name": "accepts_marketing",
          "dataType": "BOOLEAN",
          "description": "Returns true when the customer has agreed to accept marketing. Otherwise returns false.",
          "tags": null,
          "ordinalPosition": 26
        },
        {
          "name": "customer",
          "dataType": "STRUCT",
          "description": "Customer Personal Details",
          "dataTypeDisplay": "struct<username:varchar(32),name:varchar(32),sex:char(1),address:varchar(128),mail:varchar(64),birthdate:varchar(16)>",
          "children": [
            {
              "name": "username",
              "dataType": "VARCHAR",
              "dataTypeDisplay": "VARCHAR(32)",
              "dataLength": 20
            },
            {
              "name": "name",
              "dataType": "VARCHAR",
              "dataTypeDisplay": "VARCHAR(32)",
              "dataLength": 20
            },
            {
              "name": "sex",
              "dataType": "CHAR",
              "dataTypeDisplay": "CHAR(1)",
              "dataLength": 1
            },
            {
              "name": "address",
              "dataType": "VARCHAR",
              "dataTypeDisplay": "VARCHAR(128)",
              "dataLength": 128
            },
            {
              "name": "mail",
              "dataType": "VARCHAR",
              "dataTypeDisplay": "VARCHAR(64)",
              "dataLength": 64
            },
            {
              "name": "birthdate",
              "dataType": "VARCHAR",
              "dataTypeDisplay": "VARCHAR(16)",
              "dataLength": 16
            }
          ],
          "tags": null,
          "ordinalPosition": 27
        },
        {
          "name": "shipping_address",
          "dataType": "ARRAY",
          "dataTypeDisplay": "array<struct<name:varchar(32),street_address:varchar(128), city:varchar(32),postcode:varchar(8)>>",
          "arrayDataType": "STRUCT"
        },
        {
          "name": "orders",
          "dataType": "ARRAY",
          "dataTypeDisplay": "array<struct<product_id:varchar(24),price:int,onsale:boolean,tax:int,weight:int,others:int,vendor:varchar(64)>>",
          "arrayDataType": "STRUCT"
        }
      ],
      "database": {
        "id": "89229e26-7f74-4443-a568-85512eaeaa07",
        "type": "database"
      },
      "tags": null,
      "joins": null
    },
    {
      "id": "6022df14-dfcb-42ba-971a-72c2612f1c21",
      "name": "dim_location",
      "tableType": "Regular",
      "description": "The dimension table contains metrics about your Shopify POS. This table contains one row per Shopify POS location. You can use this table to generate a list of the Shopify POS locations or you can join the table with the sales table to measure sales performance.",
      "fullyQualifiedName": "bigquery.shopify.dim_location",
      "columns": [
        {
          "name": "location_id",
          "dataType": "NUMERIC",
          "tags": null,
          "constraint": "PRIMARY_KEY",
          "ordinalPosition": 1
        },
        {
          "name": "shop_id",
          "dataType": "NUMERIC",
          "description": "The ID of the store. This column is a foreign key reference to the shop_id column in the dim_shop table.",
          "tags": null,
          "ordinalPosition": 2
        },
        {
          "name": "name",
          "dataType": "VARCHAR",
          "description": "Name of the POS location as provided by the merchant. For example, 150 Elgin Street or Downtown Boutique.",
          "tags": null,
          "ordinalPosition": 3,
          "dataLength": 100
        },
        {
          "name": "address",
          "dataType": "STRUCT",
          "dataTypeDisplay": "struct<street_name:varchar(24),zipcode:int,city:varchar(100),country:struct<country_code:int, name:varchar(100)>>",
          "children": [
            {
              "name": "street_name",
              "dataType": "VARCHAR",
              "dataTypeDisplay": "VARCHAR(24)",
              "dataLength": 24
            },
            {
              "name": "zipcode",
              "dataType": "INT",
              "dataTypeDisplay": "int"
            },
            {
              "name": "city",
              "dataType": "VARCHAR",
              "dataTypeDisplay": "VARCHAR(100)",
              "dataLength": 100
            },
            {
              "name": "country",
              "dataType": "STRUCT",
              "dataTypeDisplay": "struct<country_code:int, country_name:varchar(100)>",
              "children": [
                {
                  "name": "country_code",
                  "dataType": "INT",
                  "dataTypeDisplay": "INT"
                },
                {
                  "name": "country_name",
                  "dataType": "VARCHAR",
                  "dataTypeDisplay": "VARCHAR(100)",
                  "dataLength": 100
                }
              ]
            }
          ]
        }
      ],
      "database": {
        "id": "89229e26-7f74-4443-a568-85512eaeaa07",
        "type": "database"
      },
      "tags": null,
      "joins": null
    },
    {
      "id": "2a88779a-8c46-43d0-a364-d0461ba2e070",
      "name": "dim_product",
      "tableType": "Regular",
      "description": "This dimension table contains information about each of the products in your store. This table contains one row per product. This table reflects the current state of products in your Shopify admin.",
      "fullyQualifiedName": "bigquery.shopify.dim_product",
      "columns": [
        {
          "name": "product_id",
          "dataType": "NUMERIC",
          "description": "Unique identifier for the product. This column is the primary key for this table.",
          "tags": null,
          "constraint": "PRIMARY_KEY",
          "ordinalPosition": 1
        },
        {
          "name": "shop_id",
          "dataType": "NUMERIC",
          "description": "ID of the store. This column is a foreign key reference to the shop_id column in the dim_shop table.",
          "tags": null,
          "ordinalPosition": 2
        },
        {
          "name": "title",
          "dataType": "VARCHAR",
          "description": "Name of the product.",
          "tags": null,
          "ordinalPosition": 3,
          "dataLength": 100
        },
        {
          "name": "vendor",
          "dataType": "VARCHAR",
          "description": "Name of the manufacturer, wholesaler, or other vendor of the product.",
          "tags": null,
          "ordinalPosition": 4,
          "dataLength": 100
        },
        {
          "name": "created_at",
          "dataType": "TIMESTAMP",
          "description": "Date (ISO 8601) and time (UTC) when the product was added to the store. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 5
        },
        {
          "name": "deleted_at",
          "dataType": "TIMESTAMP",
          "description": "Date (ISO 8601) and time (UTC) when the product was deleted. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 6
        }
      ],
      "database": {
        "id": "89229e26-7f74-4443-a568-85512eaeaa07",
        "type": "database"
      },
      "tags": null,
      "joins": null
    },
    {
      "id": "217bd67d-b3ef-4215-ab2e-2a9da923a345",
      "name": "dim_product_variant",
      "tableType": "Regular",
      "description": "This dimension table contains current information about each of the product variants in your store. This table contains one row per product variant.",
      "fullyQualifiedName": "bigquery.shopify.dim_product_variant",
      "columns": [
        {
          "name": "product_variant_id",
          "dataType": "NUMERIC",
          "description": "The ID of the product variant. This column is the primary key for this table.",
          "tags": null,
          "constraint": "PRIMARY_KEY",
          "ordinalPosition": 1
        },
        {
          "name": "product_id",
          "dataType": "NUMERIC",
          "description": "The ID of the product. This column is a foreign key reference to the product_id column in dim_product table.",
          "tags": null,
          "ordinalPosition": 2
        },
        {
          "name": "shop_id",
          "dataType": "NUMERIC",
          "description": "The ID of the store. This column is a foreign key reference to the shop_id column in the dim_shop table.",
          "tags": null,
          "ordinalPosition": 3
        },
        {
          "name": "title",
          "dataType": "VARCHAR",
          "description": "The title of the product variant.",
          "tags": null,
          "ordinalPosition": 4,
          "dataLength": 100
        },
        {
          "name": "barcode",
          "dataType": "VARCHAR",
          "description": "The Barcode, UPC, or ISBN number of the product variant.",
          "tags": null,
          "ordinalPosition": 5,
          "dataLength": 100
        },
        {
          "name": "sku",
          "dataType": "VARCHAR",
          "description": "The SKU of the product variant.",
          "tags": null,
          "ordinalPosition": 6,
          "dataLength": 100
        },
        {
          "name": "price",
          "dataType": "NUMERIC",
          "description": "The price of the product variant, in your store's currency.",
          "tags": null,
          "ordinalPosition": 7
        },
        {
          "name": "grams",
          "dataType": "NUMERIC",
          "description": "Number of grams that the product variant weighs.",
          "tags": null,
          "ordinalPosition": 8
        },
        {
          "name": "created_at",
          "dataType": "TIMESTAMP",
          "description": "The date (ISO 8601) and time (UTC) when the product variant was added to the store. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 9
        },
        {
          "name": "deleted_at",
          "dataType": "TIMESTAMP",
          "description": "The date (ISO 8601) and time (UTC) when the product variant was deleted. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 10
        }
      ],
      "database": {
        "id": "89229e26-7f74-4443-a568-85512eaeaa07",
        "type": "database"
      },
      "tags": null,
      "joins": null
    },
    {
      "id": "023d5944-e20e-41e0-8608-ea0ab0133e13",
      "name": "dim_shop",
      "tableType": "Regular",
      "description": "This dimension table contains online shop information. This table contains one shop per row.",
      "fullyQualifiedName": "bigquery.shopify.dim_shop",
      "columns": [
        {
          "name": "shop_id",
          "dataType": "NUMERIC",
          "description": "Unique identifier for the store. This column is the primary key for this table.",
          "tags": null,
          "constraint": "PRIMARY_KEY",
          "ordinalPosition": 1
        },
        {
          "name": "name",
          "dataType": "VARCHAR",
          "description": "Name of your store.",
          "tags": null,
          "ordinalPosition": 2,
          "dataLength": 100
        },
        {
          "name": "domain",
          "dataType": "VARCHAR",
          "description": "Primary domain specified for your online store. Your primary domain is the one that your customers and search engines see. For example, www.mycompany.com.",
          "tags": null,
          "ordinalPosition": 3,
          "dataLength": 1000
        }
      ],
      "database": {
        "id": "89229e26-7f74-4443-a568-85512eaeaa07",
        "type": "database"
      },
      "tags": null,
      "joins": null
    },
    {
      "id": "e3f80a50-8318-4385-b041-ec6126d262d0",
      "name": "dim_staff",
      "tableType": "Regular",
      "description": "This dimension table contains information about the staff accounts in the store. It contains one row per staff account. Use this table to generate a list of your staff accounts, or join it with the sales, API clients and locations tables to analyze staff performance at Shopify POS locations.",
      "fullyQualifiedName": "bigquery.shopify.dim_staff",
      "columns": [
        {
          "name": "user_id",
          "dataType": "NUMERIC",
          "description": "Unique identifier for the user of your Shopify POS or your Shopify admin.",
          "tags": null,
          "constraint": "PRIMARY_KEY",
          "ordinalPosition": 1
        },
        {
          "name": "shop_id",
          "dataType": "NUMERIC",
          "description": "The ID of the store. This column is a foreign key reference to the shop_id column in the dim_shop table.",
          "tags": null,
          "ordinalPosition": 2
        },
        {
          "name": "first_name",
          "dataType": "VARCHAR",
          "description": "First name of the staff member.",
          "tags": null,
          "dataLength": 100,
          "ordinalPosition": 3
        },
        {
          "name": "last_name",
          "dataType": "VARCHAR",
          "description": "Last name of the staff member.",
          "tags": null,
          "dataLength": 100,
          "ordinalPosition": 4
        },
        {
          "name": "email",
          "dataType": "VARCHAR",
          "description": "Email address of the staff member.",
          "tags": null,
          "dataLength": 100,
          "ordinalPosition": 5
        }
      ],
      "database": {
        "id": "89229e26-7f74-4443-a568-85512eaeaa07",
        "type": "database"
      },
      "tags": null,
      "joins": null
    },
    {
      "id": "790d46e4-753f-4366-b3c3-0cd372aaa12e",
      "name": "fact_line_item",
      "tableType": "Regular",
      "description": "The fact table contains information about the line items in orders. Each row in the table is a line item in an order. It contains product and product variant details as they were at the time of the order. This table does not include information about returns. Join this table with the TODO fact_sales table to get the details of the product on the day it was sold. This data will match what appears on the order in your Shopify admin as well as the in the Sales reports.",
      "fullyQualifiedName": "bigquery.shopify.fact_line_item",
      "columns": [
        {
          "name": "line_item_id",
          "dataType": "NUMERIC",
          "description": "ID of the line item. This column is the primary key for the this table.",
          "tags": null,
          "constraint": "PRIMARY_KEY",
          "ordinalPosition": 1
        },
        {
          "name": "billing_address_id",
          "dataType": "NUMERIC",
          "tags": null,
          "ordinalPosition": 2
        },
        {
          "name": "order_id",
          "dataType": "NUMERIC",
          "description": "ID of the order. This column is a foreign key reference to the orders_id column in the fact_order table.",
          "tags": null,
          "ordinalPosition": 3
        },
        {
          "name": "product_id",
          "dataType": "NUMERIC",
          "description": "ID of the product ordered, unless the line item is for shipping costs (you can add custom items using a draft order). This column is a foreign key reference to the product_id column in the dim_product table.",
          "tags": null,
          "ordinalPosition": 4
        },
        {
          "name": "product_variant_id",
          "dataType": "NUMERIC",
          "tags": null,
          "ordinalPosition": 5
        },
        {
          "name": "shop_id",
          "dataType": "NUMERIC",
          "description": "ID of the store. This column is a foreign key reference to the shop_id column in the dim_shop table.",
          "tags": null,
          "ordinalPosition": 6
        },
        {
          "name": "name",
          "dataType": "VARCHAR",
          "description": "Name of the line item. This name combines the product title and the variant title into the following format: product-title - variant-title. If there is no variant title, then the format is product-title. This column is the same as order.line_items.name\"in the Admin API.",
          "tags": null,
          "ordinalPosition": 7,
          "dataLength": 100
        },
        {
          "name": "product_title",
          "dataType": "VARCHAR",
          "description": "Name of the product ordered. This column is the same as order.line_items.title in the Admin API.",
          "tags": null,
          "ordinalPosition": 8,
          "dataLength": 150
        },
        {
          "name": "price",
          "dataType": "NUMERIC",
          "description": "Price of the product variant.",
          "tags": null,
          "ordinalPosition": 9
        },
        {
          "name": "quantity",
          "dataType": "NUMERIC",
          "description": "Number of product variant items ordered in the line item.",
          "tags": null,
          "ordinalPosition": 10
        },
        {
          "name": "requires_shipping",
          "dataType": "BOOLEAN",
          "description": "Whether the product variant requires fulfillment (shipping). For example, online gift cards don't require shipping.",
          "tags": null,
          "ordinalPosition": 11
        },
        {
          "name": "taxable",
          "dataType": "BOOLEAN",
          "description": "Whether taxes are charged for the product variant, otherwise contains 0. For example, when the line item is a gift card, taxes are not charged.",
          "tags": null,
          "ordinalPosition": 12
        },
        {
          "name": "gift_card",
          "dataType": "BOOLEAN",
          "description": "Whether the product variant is a gift card.",
          "tags": null,
          "ordinalPosition": 13
        },
        {
          "name": "grams",
          "dataType": "NUMERIC",
          "description": "Weight of a single unit of the product variant. Contains 0 when the product variant is a gift card.",
          "tags": null,
          "ordinalPosition": 14
        },
        {
          "name": "product_vendor",
          "dataType": "VARCHAR",
          "description": "Name of the manufacturer, wholesaler, or other vendor of the product.",
          "tags": null,
          "ordinalPosition": 15,
          "dataLength": 200
        },
        {
          "name": "fulfillable_quantity",
          "dataType": "NUMERIC",
          "description": "Number of product variant items in the line item that require fulfillment. Some product variants, such as gift cards and digital products, do not need to be fulfilled.",
          "tags": null,
          "ordinalPosition": 16
        },
        {
          "name": "fulfillment_service",
          "dataType": "VARCHAR",
          "description": "Name of the fulfillment service provider that fulfilled (shipped) the variant ordered. Contains manual when there is no fulfillment service specified for the variant.",
          "tags": null,
          "ordinalPosition": 17,
          "dataLength": 100
        }
      ],
      "database": {
        "id": "89229e26-7f74-4443-a568-85512eaeaa07",
        "type": "database"
      },
      "tags": null,
      "joins": null
    },
    {
      "id": "790d46e4-753f-4366-b3c3-0cd372aaa12e",
      "name": "fact_order",
      "tableType": "Regular",
      "description": "The orders table contains information about each order in your store. Although this table is good for generating order lists and joining with the dim_customer, use the sales table instead for computing financial or other metrics.",
      "fullyQualifiedName": "bigquery.shopify.fact_order",
      "columns": [
        {
          "name": "order_id",
          "dataType": "NUMERIC",
          "description": "Unique numeric identifier for the order across Shopify stores. In your Shopify admin, this ID is used internally. Most merchants are familiar with the other ID that appears on orders in the Shopify admin. This ID can be found in the Name column.",
          "tags": null,
          "constraint": "PRIMARY_KEY",
          "ordinalPosition": 1
        },
        {
          "name": "api_client_id",
          "dataType": "NUMERIC",
          "description": "The ID of the API client that called the Shopify API. This column is a foreign key reference to the api_client_id column in the dim_api_client table.",
          "tags": null,
          "ordinalPosition": 2
        },
        {
          "name": "billing_address_id",
          "dataType": "NUMERIC",
          "tags": null,
          "ordinalPosition": 3
        },
        {
          "name": "customer_id",
          "dataType": "NUMERIC",
          "description": "The ID of the customer. This column is a foreign key reference to the customer_id column in the dim_customer table.",
          "tags": null,
          "ordinalPosition": 4
        },
        {
          "name": "location_id",
          "dataType": "NUMERIC",
          "tags": null,
          "ordinalPosition": 5
        },
        {
          "name": "shipping_address_id",
          "dataType": "NUMERIC",
          "tags": null,
          "ordinalPosition": 6
        },
        {
          "name": "shop_id",
          "dataType": "NUMERIC",
          "description": "The ID of the store. This column is a foreign key reference to the shop_id column in the dim_shop table.",
          "tags": null,
          "ordinalPosition": 7
        },
        {
          "name": "user_id",
          "dataType": "NUMERIC",
          "description": "The ID of the staff member who created the order. This column is a foreign key reference to the ID in the dim_staff table. This column applies to Shopify POS orders and to orders that were converted from draft orders.",
          "tags": null,
          "ordinalPosition": 8
        },
        {
          "name": "name",
          "dataType": "VARCHAR",
          "description": "The identifier of the order that the merchant and customer sees. This is the ID that appears on the order in the Shopify admin. For example, #1001. By default, this identifier is unique to one store. If you have multiple stores, then use the order_id column to guarantee uniqueness across multiple stores.",
          "tags": null,
          "ordinalPosition": 9,
          "dataLength": 100
        },
        {
          "name": "total_price",
          "dataType": "NUMERIC",
          "description": "The total price of the order, including shipping and taxes. This column includes gift card sales, but does not include returns. This value may not be accurate for API-imported orders. Do not use this column for financial calculations. Instead, use the total_price column in the sales table.",
          "tags": null,
          "ordinalPosition": 10
        },
        {
          "name": "discount_code",
          "dataType": "VARCHAR",
          "description": "The discount code that was applied to the order.",
          "tags": null,
          "ordinalPosition": 11,
          "dataLength": 100
        },
        {
          "name": "processed_at",
          "dataType": "TIMESTAMP",
          "description": "The date (ISO 8601) and time (UTC) when the order was created. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 12
        },
        {
          "name": "canceled_at",
          "dataType": "TIMESTAMP",
          "description": "If the order was canceled, then this column contains the date (ISO 8601) and time (UTC) when the order was canceled. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 13
        },
        {
          "name": "deleted_at",
          "dataType": "TIMESTAMP",
          "description": "If the order was deleted, then this column contains the date (ISO 8601) and time (UTC) when the order was deleted. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 14
        },
        {
          "name": "test",
          "dataType": "BOOLEAN",
          "description": "True when the order is a test order, False otherwise.",
          "tags": null,
          "ordinalPosition": 15
        }
      ],
      "database": {
        "id": "89229e26-7f74-4443-a568-85512eaeaa07",
        "type": "database"
      },
      "tags": null,
      "joins": null
    },
    {
      "id": "790d46e4-753f-4366-b3c3-0cd372aaa12e",
      "name": "fact_sale",
      "tableType": "Regular",
      "description": "The fact table captures the value of products sold or returned, as well as the values of other charges such as taxes and shipping costs. The sales table contains one row per order line item, one row per returned line item, and one row per shipping charge. Use this table when you need financial metrics.",
      "fullyQualifiedName": "bigquery.shopify.fact_sale",
      "columns": [
        {
          "name": "sale_id",
          "dataType": "NUMERIC",
          "description": "ID of the sale row. This column is the primary key for this table.",
          "tags": null,
          "constraint": "PRIMARY_KEY",
          "ordinalPosition": 1
        },
        {
          "name": "billing_address_id",
          "dataType": "NUMERIC",
          "description": "ID of the billing address of the customer. This column is a foreign key reference to the address_id column in the dim_address table.",
          "tags": null,
          "ordinalPosition": 2
        },
        {
          "name": "api_client_id",
          "dataType": "NUMERIC",
          "description": "ID of the API client from which the adjustment was made. This column is a foreign key reference to the ID of the API client in the dim_api_client table.",
          "tags": null,
          "ordinalPosition": 3
        },
        {
          "name": "customer_id",
          "dataType": "NUMERIC",
          "description": "ID of the customer. This column is a foreign key reference to the customer_id column in the dim_customer table.",
          "tags": null,
          "ordinalPosition": 4
        },
        {
          "name": "line_item_id",
          "dataType": "NUMERIC",
          "description": "ID of the line item. This column is a foreign key reference to line_item_id column in the fact_line_item table. When the row describes a shipping charge, there is no line_item_id value.",
          "tags": null,
          "ordinalPosition": 5
        },
        {
          "name": "location_id",
          "dataType": "NUMERIC",
          "description": "ID of the Shopify POS location. This column is a foreign key reference to the location_id column in the dim_location table. When the order is not a POS order, then there is no location ID.",
          "tags": null,
          "ordinalPosition": 6
        },
        {
          "name": "order_id",
          "dataType": "NUMERIC",
          "description": "ID of the order. This column is a foreign key reference to order_id column in the fact_order table.",
          "tags": null,
          "ordinalPosition": 7
        },
        {
          "name": "product_id",
          "dataType": "NUMERIC",
          "description": "ID of the product sold or returned. This column is a foreign key reference to the product_id column in the dim_product table. When the line item describes a shipping charge, then there is no product ID.",
          "tags": null,
          "ordinalPosition": 8
        },
        {
          "name": "product_variant_id",
          "dataType": "NUMERIC",
          "description": "ID of the product variant sold or returned. This column is a foreign key reference to the product_variant_id column in the dim_product_variant table. When the row describes a shipping charge, then there is no product variant ID.",
          "tags": null,
          "ordinalPosition": 9
        },
        {
          "name": "shipping_address_id",
          "dataType": "NUMERIC",
          "description": "ID of the shipping address of the customer who made the order. This column is a foreign key reference to the address_id column in the dim_address table. Some sales, such as those made using Shopify POS, do not have a customer's shipping address associated with them.",
          "tags": null,
          "ordinalPosition": 10
        },
        {
          "name": "shop_id",
          "dataType": "NUMERIC",
          "description": "ID of your store. This column is a foreign key reference to the shop_id column in the dim_shop table.",
          "tags": null,
          "ordinalPosition": 11
        },
        {
          "name": "user_id",
          "dataType": "NUMERIC",
          "description": "ID of the staff member who is associated with the sale. This column is a foreign key reference to the user_id column in the dim_staff table. Not all sales have a staff member associated with them.",
          "tags": null,
          "ordinalPosition": 12
        },
        {
          "name": "gross_sales",
          "dataType": "NUMERIC",
          "description": "Price of the product purchased multiplied by the quantity ordered. This value is formatted in the currency of your store. If the product purchased is a gift card, then 0 is returned because gift cards are not included in gross sales calculations. The gross sales amount also does not include any discounts, returns, taxes or shipping charges. The gross_sales column is calculated using the following formula: product (excluding gift cards) price x quantity (before taxes, shipping, discounts, and returns). Canceled, pending, and unpaid orders will have a value for this column, but test and deleted orders will not.",
          "tags": null,
          "ordinalPosition": 13
        },
        {
          "name": "net_sales",
          "dataType": "NUMERIC",
          "description": "Net sales of the line item. The value of the line item's gross sales minus any discounts minus the value of any returned items. Net sales does not include taxes or shipping costs, or the sale of gift cards. If the line item contains gift cards, then the field contains 0. Net sales is calculated by using the following formula: gross_sales - discounts - returns.",
          "tags": null,
          "ordinalPosition": 14
        },
        {
          "name": "total_sales",
          "dataType": "NUMERIC",
          "description": "Total sales of the line item. This value does not include gift cards. Total sales is calculated using the following formula: net_sales + shipping + taxes.",
          "tags": null,
          "ordinalPosition": 15
        },
        {
          "name": "returns",
          "dataType": "NUMERIC",
          "description": "Value of the products returned by the customer regardless of the amount that the merchant actually receives from the customer. This value is usually a negative number, but it can also be zero (for example, if the item being returned was a free gift with purchase). Taxes and shipping charges are not included. The returns amount is calculated by using the following formula: 0 - (product variant price * quantity) + discounts.",
          "tags": null,
          "ordinalPosition": 16
        },
        {
          "name": "discounts",
          "dataType": "NUMERIC",
          "description": "Total amount discounted from the line item. The discounts column contains the sum of any line item discounts plus the line item's portion of any order-level discount. The value of the discount is either negative or zero. The discounts column is calculated using the following formula: line item discount + order level discount share.",
          "tags": null,
          "ordinalPosition": 17
        },
        {
          "name": "shipping",
          "dataType": "NUMERIC",
          "description": "When the line item is for a shipping charge, this column contains the amount charged for shipping the order or the amount of the shipping charge that is refunded when an item is returned. This value is positive for a shipping charge, and negative for the value returned. Any applicable taxes charged for shipping costs are recorded in the Taxes column. This column is calculated using the following formula: shipping charge or refund - shipping discount..",
          "tags": null,
          "ordinalPosition": 18
        },
        {
          "name": "taxes",
          "dataType": "NUMERIC",
          "description": "The amount of taxes charged or returned for the line item. This value will be positive for a sale and negative for a return. Tax on an order is split proportionally amongst the line items to which it applies. Gift cards are not taxed. If multiple taxes are applied (for example, State and City sales taxes), then this column contains the sum of those tax amounts. This column can include taxes charged on shipping, if they are applicable.",
          "tags": null,
          "ordinalPosition": 19
        },
        {
          "name": "gift_card_discounts",
          "dataType": "NUMERIC",
          "description": "Total amount discounted from gift card sales. For example, if a $50 gift card is sold at a $10 discount for $40, then this column will contain $10.",
          "tags": null,
          "ordinalPosition": 20
        },
        {
          "name": "gift_card_gross_sales",
          "dataType": "NUMERIC",
          "description": "Total face value of gift cards sold. For example, a $50 gift card is sold at a $10 discount for $40. In this example, the gift_card_gross_sales column will contain $50. Use this column to measure the increase in liabilities due to gift cards being issued (even though this value will not balance against the actual payments that you receive).",
          "tags": null,
          "ordinalPosition": 21
        },
        {
          "name": "gift_cards_issued",
          "dataType": "NUMERIC",
          "description": "Net amount that the gift cards sold for, after discounts. For example, for a $50 gift card sold at a $10 discount for $40, this column will contain $40. Use this column to balance against the payments that you receive.",
          "tags": null,
          "ordinalPosition": 22
        },
        {
          "name": "quantity",
          "dataType": "NUMERIC",
          "description": "Quantity of the items sold or returned. This value will be negative for returns and zero for line items that contain shipping charges.",
          "tags": null,
          "ordinalPosition": 23
        },
        {
          "name": "currency",
          "dataType": "VARCHAR",
          "description": "Three-letter ISO currency code of the payment. For example, USD is the code for United States Dollar. This is the currency of the store at the time of the order.",
          "tags": null,
          "ordinalPosition": 24,
          "dataLength": 200
        },
        {
          "name": "is_deleted",
          "dataType": "BOOLEAN",
          "description": "Contains 1 when the sale's order was deleted, otherwise contains 0.",
          "tags": null,
          "ordinalPosition": 25
        },
        {
          "name": "test",
          "dataType": "BOOLEAN",
          "description": "Whether the sale is a test order. Returns True when the sale is a test sale. See Test orders.",
          "tags": null,
          "ordinalPosition": 26
        },
        {
          "name": "happened_at",
          "dataType": "TIMESTAMP",
          "description": "Date (ISO 8601) and time (UTC) when the order was created for a sale or when the order was returned.",
          "tags": null,
          "ordinalPosition": 27
        }
      ],
      "database": {
        "id": "89229e26-7f74-4443-a568-85512eaeaa07",
        "type": "database"
      },
      "tags": null,
      "joins": null
    },
    {
      "id": "790d46e4-753f-4366-b3c3-0cd372aaa12e",
      "name": "fact_session",
      "tableType": "Regular",
      "description": "This fact table contains information about the visitors to your online store. This table has one row per session, where one session can contain many page views. If you use Urchin Traffic Module (UTM) parameters in marketing campaigns, then you can use this table to track how many customers they direct to your store.",
      "fullyQualifiedName": "bigquery.shopify.fact_session",
      "columns": [
        {
          "name": "derived_session_token",
          "dataType": "VARCHAR",
          "description": "The ID of the visitor session. This column is the primary key for the table.",
          "tags": null,
          "constraint": "PRIMARY_KEY",
          "ordinalPosition": 1,
          "dataLength": 200
        },
        {
          "name": "shop_id",
          "dataType": "NUMERIC",
          "description": "The ID of the store. This column is a foreign key reference to the shop_id column in the dim_shop table.",
          "tags": null,
          "ordinalPosition": 2
        },
        {
          "name": "session_duration",
          "dataType": "NUMERIC",
          "description": "The time that the visitor spent in your store during the session. This value is the sum of the time spent on each page view (except for the last page viewed) during the session. The maximum value is 1800 seconds (30 minutes).",
          "tags": null,
          "ordinalPosition": 3
        },
        {
          "name": "count_of_pageviews",
          "dataType": "NUMERIC",
          "description": "The number of pages viewed during the session.",
          "tags": null,
          "ordinalPosition": 4
        },
        {
          "name": "session_started_at",
          "dataType": "TIMESTAMP",
          "description": "The date (ISO 8601) and time (UTC) when this visitor session begins. It is the timestamp when the visitor first visits the store during this session. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 5
        },
        {
          "name": "session_token",
          "dataType": "VARCHAR",
          "description": "The ID of the session token that is created by the browser. A session token expires after 30 minutes of inactivity.",
          "tags": null,
          "ordinalPosition": 6,
          "dataLength": 200
        },
        {
          "name": "user_token",
          "dataType": "VARCHAR",
          "description": "The unique token assigned to the user. A user token expires after 2 years of inactivity.",
          "tags": null,
          "constraint": "UNIQUE",
          "ordinalPosition": 7,
          "dataLength": 20
        },
        {
          "name": "landing_page_url",
          "dataType": "VARCHAR",
          "description": "The full URL of the first page visited during the session. For example, https://www.myshop.com/products/cool-tshirt?utm_source=Shop&utm_medium=....",
          "tags": null,
          "ordinalPosition": 8,
          "dataLength": 1000
        },
        {
          "name": "exit_page_path",
          "dataType": "VARCHAR",
          "description": "The path portion of the URL of the last page that the visitor visited during the session. This field is the same as exit_page_url except that it doesn\u2019t contain the name of the store or any parameters. For example, /products/cool-tshirt.",
          "tags": null,
          "ordinalPosition": 9,
          "dataLength": 1000
        },
        {
          "name": "exit_page_url",
          "dataType": "VARCHAR",
          "description": "The full URL of the last page that the visitor visited during the session. For example, https://www.myshop.com/products/cool-tshirt?utm_source=Shop&utm_medium=....",
          "tags": null,
          "ordinalPosition": 10,
          "dataLength": 1000
        },
        {
          "name": "referrer_tld",
          "dataType": "VARCHAR",
          "description": "The top-level domain of the referring website. For example, if the hostname is www.facebook.com, then the referrer_tld is com.",
          "tags": null,
          "ordinalPosition": 11,
          "dataLength": 100
        },
        {
          "name": "ua_browser",
          "dataType": "VARCHAR",
          "description": "The name of the browser that the visitor used. For example, Mobile Safari, Chrome.",
          "tags": null,
          "ordinalPosition": 12,
          "dataLength": 200
        },
        {
          "name": "ua_raw",
          "dataType": "VARCHAR",
          "description": "The string that identifies the user agent of the user. User agent shows data about the operating system and device that a visitor uses to browse your store.",
          "tags": null,
          "ordinalPosition": 13,
          "dataLength": 2000
        },
        {
          "name": "count_of_orders_completed",
          "dataType": "NUMERIC",
          "description": "The number of orders created during the session.",
          "tags": null,
          "ordinalPosition": 14
        },
        {
          "name": "completed_first_order_at",
          "dataType": "TIMESTAMP",
          "description": "The date (ISO 8601) and time (UTC) when the visitor completes their first order during this session. Contains NULL if the visitor never completes an order during this session. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 15
        },
        {
          "name": "hit_first_checkout_at",
          "dataType": "TIMESTAMP",
          "description": "The date (ISO 8601) and time (UTC) when the visitor first visits the checkout page during this session. Contains NULL if the visitor never visits the checkout page during the session. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 16
        },
        {
          "name": "started_first_checkout_at",
          "dataType": "TIMESTAMP",
          "description": "The date (ISO 8601) and time (UTC) when the visitor first starts entering their information into the checkout fields. Contains NULL if the visitor never enters their information during the session. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
          "tags": null,
          "ordinalPosition": 17
        },
        {
          "name": "count_of_cart_additions",
          "dataType": "NUMERIC",
          "description": "The number of items added to the cart during the session. For example, if a customer adds 5 t-shirts and 1 lipstick to their cart, and then removes one of the t-shirts, then the value in this column is 6.",
          "tags": null,
          "ordinalPosition": 18
        },
        {
          "name": "count_of_distinct_products_added_to_cart",
          "dataType": "NUMERIC",
          "description": "The number of distinct products added to the cart during the session. For example, if a customer adds 5 t-shirts and 1 lipstick are added to the cart, then the value in this column is 2.",
          "tags": null,
          "ordinalPosition": 19
        },
        {
          "name": "count_of_distinct_product_variants_added_to_cart",
          "dataType": "NUMERIC",
          "description": "The number of distinct product variants added to the cart during the session. For example, if a customer adds 2 small and 3 large t-shirts and 1 lipstick to the cart, then the value in this column is 3.",
          "tags": null,
          "ordinalPosition": 20
        },
        {
          "name": "had_error",
          "dataType": "BOOLEAN",
          "description": "True when an an error appears during the checkout that is not a payment error, False otherwise.",
          "tags": null,
          "ordinalPosition": 21
        },
        {
          "name": "had_payment_error",
          "dataType": "BOOLEAN",
          "description": "True when a payment error occurs during the checkout, False otherwise.",
          "tags": null,
          "ordinalPosition": 22
        },
        {
          "name": "had_out_of_stock_warning",
          "dataType": "BOOLEAN",
          "description": "True when an out-of-stock warning appears on the checkout page, False otherwise.",
          "tags": null,
          "ordinalPosition": 23
        },
        {
          "name": "had_credit_card_info_error",
          "dataType": "BOOLEAN",
          "description": "True when a payment error occurs because of a credit card error, False otherwise.",
          "tags": null,
          "ordinalPosition": 24
        },
        {
          "name": "had_discount",
          "dataType": "BOOLEAN",
          "description": "True when a checkout error occurs because of a discount error, False otherwise.",
          "tags": null,
          "ordinalPosition": 25
        },
        {
          "name": "had_free_shipping",
          "dataType": "BOOLEAN",
          "description": "True when the order has no shipping cost, False otherwise.",
          "tags": null,
          "ordinalPosition": 26
        },
        {
          "name": "location_city",
          "dataType": "VARCHAR",
          "description": "The name of the city where the visitor is located. For example, Topeka.",
          "tags": null,
          "ordinalPosition": 27,
          "dataLength": 100
        },
        {
          "name": "location_region",
          "dataType": "VARCHAR",
          "description": "The name of the region, such as a province or state, where the visitor is located. For example, Kansas.",
          "tags": null,
          "ordinalPosition": 28,
          "dataLength": 100
        },
        {
          "name": "location_region_code",
          "dataType": "VARCHAR",
          "description": "The code for the region, such as a province or state, where the visitor is located. For example, KS.",
          "tags": null,
          "ordinalPosition": 29,
          "dataLength": 200
        },
        {
          "name": "location_country",
          "dataType": "VARCHAR",
          "description": "The name of the country where the visitor is located. For example, United States.",
          "tags": null,
          "ordinalPosition": 30,
          "dataLength": 100
        },
        {
          "name": "location_country_code",
          "dataType": "VARCHAR",
          "description": "The two-digit ISO country code where the visitor is located. For example, US.",
          "tags": null,
          "ordinalPosition": 31,
          "dataLength": 100
        }
      ],
      "database": {
        "id": "89229e26-7f74-4443-a568-85512eaeaa07",
        "type": "database"
      },
      "tags": null,
      "joins": null
    }
  ]
}
