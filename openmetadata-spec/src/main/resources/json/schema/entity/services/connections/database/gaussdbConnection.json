{
  "$id": "https://github.com/pangpang20/OpenMetadata/blob/gaussdb-dev/openmetadata-spec/src/main/resources/json/schema/entity/services/connections/database/gaussdbConnection.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "GaussdbConnection",
  "description": "Gaussdb Database Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.schema.services.connections.database.GaussdbConnection",
  "definitions": {
    "gaussdbType": {
      "description": "Service type.",
      "type": "string",
      "enum": [
        "Gaussdb"
      ],
      "default": "Gaussdb"
    },
    "gaussdbScheme": {
      "description": "SQLAlchemy driver scheme options.",
      "type": "string",
      "enum": [
        "postgresql+psycopg2",
        "pgspider+psycopg2"
      ],
      "default": "postgresql+psycopg2"
    }
  },
  "properties": {
    "type": {
      "title": "Service Type",
      "description": "Service Type",
      "$ref": "#/definitions/gaussdbType",
      "default": "Gaussdb"
    },
    "scheme": {
      "title": "Connection Scheme",
      "description": "SQLAlchemy driver scheme options.",
      "$ref": "#/definitions/gaussdbScheme",
      "default": "postgresql+psycopg2"
    },
    "username": {
      "title": "Username",
      "description": "Username to connect to Gaussdb. This user should have privileges to read all the metadata in Gaussdb.",
      "type": "string"
    },
    "authType": {
      "title": "Auth Configuration Type",
      "description": "Choose Auth Config Type.",
      "oneOf": [
        {
          "$ref": "./common/basicAuth.json"
        }
      ]
    },
    "hostPort": {
      "title": "Host and Port",
      "description": "Host and port of the source service.",
      "type": "string"
    },
    "database": {
      "title": "Database",
      "description": "Database of the data source. This is optional parameter, if you would like to restrict the metadata reading to a single database. When left blank, OpenMetadata Ingestion attempts to scan all the databases.",
      "type": "string"
    },
    "ingestAllDatabases": {
      "title": "Ingest All Databases",
      "description": "Ingest data from all databases in Gaussdb. You can use databaseFilterPattern on top of this.",
      "type": "boolean",
      "default": false
    },
    "sslMode": {
      "$ref": "../../../../security/ssl/verifySSLConfig.json#/definitions/sslMode"
    },
    "sslConfig": {
      "$ref": "../../../../security/ssl/verifySSLConfig.json#/definitions/sslConfig"
    },
    "classificationName": {
      "title": "Classification Name",
      "description": "Custom OpenMetadata Classification name for Gaussdb policy tags.",
      "type": "string",
      "default": "GaussdbPolicyTags"
    },
    "connectionOptions": {
      "title": "Connection Options",
      "$ref": "../connectionBasicType.json#/definitions/connectionOptions"
    },
    "connectionArguments": {
      "title": "Connection Arguments",
      "$ref": "../connectionBasicType.json#/definitions/connectionArguments"
    },
    "supportsMetadataExtraction": {
      "title": "Supports Metadata Extraction",
      "$ref": "../connectionBasicType.json#/definitions/supportsMetadataExtraction"
    },
    "supportsUsageExtraction": {
      "$ref": "../connectionBasicType.json#/definitions/supportsUsageExtraction"
    },
    "supportsLineageExtraction": {
      "$ref": "../connectionBasicType.json#/definitions/supportsLineageExtraction"
    },
    "supportsDBTExtraction": {
      "$ref": "../connectionBasicType.json#/definitions/supportsDBTExtraction"
    },
    "supportsProfiler": {
      "title": "Supports Profiler",
      "$ref": "../connectionBasicType.json#/definitions/supportsProfiler"
    },
    "supportsDatabase": {
      "title": "Supports Database",
      "$ref": "../connectionBasicType.json#/definitions/supportsDatabase"
    },
    "supportsQueryComment": {
      "title": "Supports Query Comment",
      "$ref": "../connectionBasicType.json#/definitions/supportsQueryComment"
    },
    "sampleDataStorageConfig": {
      "title": "Storage Config for Sample Data",
      "$ref": "../connectionBasicType.json#/definitions/sampleDataStorageConfig"
    },
    "supportsDataDiff": {
        "title": "Supports Data Diff Extraction.",
        "$ref": "../connectionBasicType.json#/definitions/supportsDataDiff"
    }
  },
  "additionalProperties": false,
  "required": [
    "hostPort",
    "username",
    "database"
  ]
}
