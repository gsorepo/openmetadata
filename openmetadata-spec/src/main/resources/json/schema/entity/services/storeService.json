{
  "$id": "https://open-metadata.org/schema/entity/services/storeService.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Store Service",
  "description": "This schema defines the Store Service entity, such as S3, GCS, AZURE.",
  "type": "object",
  "javaType": "org.openmetadata.schema.entity.services.StoreService",
  "javaInterfaces": [
    "org.openmetadata.schema.EntityInterface",
    "org.openmetadata.schema.ServiceEntityInterface"
  ],
  "definitions": {
    "storeServiceType": {
      "description": "Type of store service such as S3, GFS, AZURE...",
      "javaInterfaces": [
        "org.openmetadata.schema.EnumInterface"
      ],
      "type": "string",
      "enum": [
        "S3",
        "GCS",
        "AZURE"
      ],
      "javaEnums": [
        {
          "name": "S3"
        },
        {
          "name": "GCS"
        },
        {
          "name": "AZURE"
        }
      ]
    },
    "storeConnection": {
      "type": "object",
      "description": "Store Connection.",
      "javaInterfaces": [
        "org.openmetadata.schema.ServiceConnectionEntityInterface"
      ],
      "properties": {
        "config": {
          "mask": true,
          "oneOf": [
            {
              "$ref": "./connections/store/s3StoreConnection.json"
            },
            {
              "$ref": "./connections/store/gcsStoreConnection.json"
            },
            {
              "$ref": "./connections/store/azureStoreConnection.json"
            }
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "properties": {
    "id": {
      "description": "Unique identifier of this store service instance.",
      "$ref": "../../type/basic.json#/definitions/uuid"
    },
    "name": {
      "description": "Name that identifies this store service.",
      "$ref": "../../type/basic.json#/definitions/entityName"
    },
    "fullyQualifiedName": {
      "description": "FullyQualifiedName same as `name`.",
      "$ref": "../../type/basic.json#/definitions/fullyQualifiedEntityName"
    },
    "displayName": {
      "description": "Display Name that identifies this store service.",
      "type": "string"
    },
    "serviceType": {
      "description": "Type of store service such as S3, GCS, AZURE...",
      "$ref": "#/definitions/storeServiceType"
    },
    "description": {
      "description": "Description of a store service instance.",
      "$ref": "../../type/basic.json#/definitions/markdown"
    },
    "connection": {
      "$ref": "#/definitions/storeConnection"
    },
    "pipelines": {
      "description": "References to pipelines deployed for this store service to extract metadata, usage, lineage etc..",
      "$ref": "../../type/entityReference.json#/definitions/entityReferenceList"
    },
    "tags": {
      "description": "Tags for this Store Service.",
      "type": "array",
      "items": {
        "$ref": "../../type/tagLabel.json"
      },
      "default": null
    },
    "version": {
      "description": "Metadata version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/entityVersion"
    },
    "updatedAt": {
      "description": "Last update time corresponding to the new version of the entity in Unix epoch time milliseconds.",
      "$ref": "../../type/basic.json#/definitions/timestamp"
    },
    "updatedBy": {
      "description": "User who made the update.",
      "type": "string"
    },
    "href": {
      "description": "Link to the resource corresponding to this store service.",
      "$ref": "../../type/basic.json#/definitions/href"
    },
    "owner": {
      "description": "Owner of this store service.",
      "$ref": "../../type/entityReference.json"
    },
    "changeDescription": {
      "description": "Change that lead to this version of the entity.",
      "$ref": "../../type/entityHistory.json#/definitions/changeDescription"
    },
    "deleted": {
      "description": "When `true` indicates the entity has been soft deleted.",
      "type": "boolean",
      "default": false
    }
  },
  "required": [
    "id",
    "name",
    "serviceType",
    "href"
  ],
  "additionalProperties": false
}
