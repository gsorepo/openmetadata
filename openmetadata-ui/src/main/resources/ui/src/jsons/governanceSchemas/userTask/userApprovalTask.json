{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "UserApprovalTaskDefinition",
  "description": "Defines a Task for a given User to approve.",
  "javaInterfaces": [
    "org.openmetadata.schema.governance.workflows.elements.WorkflowNodeDefinitionInterface"
  ],
  "javaType": "org.openmetadata.schema.governance.workflows.elements.nodes.userTask.UserApprovalTaskDefinition",
  "type": "object",
  "properties": {
    "type": {
      "type": "string",
      "default": "userTask"
    },
    "subType": {
      "type": "string",
      "default": "userApprovalTask"
    },
    "name": {
      "description": "Name that identifies this Node.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^((?!::).)*$"
    },
    "displayName": {
      "description": "Display Name that identifies this Node.",
      "type": "string"
    },
    "description": {
      "description": "Description of the Node.",
      "$comment": "@om-field-type",
      "type": "string"
    },
    "config": {
      "type": "object",
      "properties": {
        "assignees": {
          "description": "People/Teams assigned to the Task.",
          "type": "object",
          "properties": {
            "addReviewers": {
              "description": "Add the Reviewers to the assignees List.",
              "type": "boolean",
              "default": false
            },
            "extraAssignees": {
              "description": "Manually add Specific Assignees.",
              "type": "array",
              "items": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Entity Reference",
                "description": "This schema defines the EntityReference type used for referencing an entity. EntityReference is used for capturing relationships from one entity to another. For example, a table has an attribute called database of type EntityReference that captures the relationship of a table `belongs to a` database.",
                "type": "object",
                "javaType": "org.openmetadata.schema.type.EntityReference",
                "properties": {
                  "id": {
                    "description": "Unique identifier that identifies an entity instance.",
                    "type": "string",
                    "format": "uuid"
                  },
                  "type": {
                    "description": "Entity type/class name - Examples: `database`, `table`, `metrics`, `databaseService`, `dashboardService`...",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the entity instance.",
                    "type": "string"
                  },
                  "fullyQualifiedName": {
                    "description": "Fully qualified name of the entity instance. For entities such as tables, databases fullyQualifiedName is returned in this field. For entities that don't have name hierarchy such as `user` and `team` this will be same as the `name` field.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Optional description of entity.",
                    "$ref": "#/properties/description"
                  },
                  "displayName": {
                    "description": "Display Name that identifies this entity.",
                    "type": "string"
                  },
                  "deleted": {
                    "description": "If true the entity referred to has been soft-deleted.",
                    "type": "boolean"
                  },
                  "inherited": {
                    "description": "If true the relationship indicated by this entity reference is inherited from the parent entity.",
                    "type": "boolean"
                  },
                  "href": {
                    "description": "Link to the entity resource.",
                    "type": "string",
                    "format": "uri"
                  }
                },
                "required": ["id", "type"],
                "additionalProperties": false
              }
            }
          }
        }
      },
      "required": ["assignees"],
      "additionalProperties": false
    },
    "input": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": ["relatedEntity"],
      "additionalItems": false,
      "minItems": 1,
      "maxItems": 1
    },
    "output": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": ["result", "resolvedBy"],
      "additionalItems": false,
      "minItems": 2,
      "maxItems": 2
    }
  }
}
