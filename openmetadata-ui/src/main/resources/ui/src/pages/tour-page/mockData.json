{
  "resSearchResults": {
    "data": {
      "took": 73,
      "timed_out": false,
      "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
      },
      "hits": {
        "total": {
          "value": 4,
          "relation": "eq"
        },
        "max_score": 5,
        "hits": [
          {
            "_index": "table_search_index",
            "_type": "_doc",
            "_id": "c0057714-2d87-4bb9-a300-7032676fc6de",
            "_score": 5,
            "_source": {
              "table_id": "c0057714-2d87-4bb9-a300-7032676fc6de",
              "database": "shopify",
              "service": "bigquery",
              "service_type": "BigQuery",
              "service_category": "databaseService",
              "entity_type": "table",
              "table_name": "dim_address",
              "suggest": [
                {
                  "input": ["bigquery.shopify.dim_address"],
                  "weight": 5
                },
                {
                  "input": ["dim_address"],
                  "weight": 10
                }
              ],
              "description": "This dimension table contains the billing and shipping addresses of customers. You can join this table with the sales table to generate lists of the billing and shipping addresses. Customers can enter their addresses more than once, so the same address can appear in more than one row in this table. This table contains one row per customer address.",
              "table_type": "Regular",
              "last_updated_timestamp": 1637994330,
              "column_names": [
                "address_id",
                "shop_id",
                "first_name",
                "last_name",
                "address1",
                "address2",
                "company",
                "city",
                "region",
                "zip",
                "country",
                "phone"
              ],
              "column_descriptions": [
                "Unique identifier for the address.",
                "The ID of the store. This column is a foreign key reference to the shop_id column in the dim_shop table.",
                "First name of the customer.",
                "Last name of the customer.",
                "The first address line. For example, 150 Elgin St.",
                "The second address line. For example, Suite 800.",
                "The name of the customer's business, if one exists.",
                "The name of the city. For example, Palo Alto.",
                "The name of the region, such as a province or state, where the customer is located. For example, Ontario or New York. This column is the same as CustomerAddress.province in the Admin API.",
                "The ZIP or postal code. For example, 90210.",
                "The full name of the country. For example, Canada.",
                "The phone number of the customer."
              ],
              "monthly_stats": 100,
              "monthly_percentile_rank": 45,
              "weekly_stats": 100,
              "weekly_percentile_rank": 45,
              "daily_stats": 100,
              "daily_percentile_rank": 45,
              "tags": [],
              "fqdn": "bigquery.shopify.dim_address",
              "tier": null,
              "schema_description": null,
              "owner": "",
              "followers": []
            },
            "highlight": {
              "table_name": [
                "<span class=\"text-highlighter\">dim_address</span>"
              ]
            }
          },
          {
            "_index": "table_search_index",
            "_type": "_doc",
            "_id": "76d1640a-0edd-4d3d-83f0-6443b5f20658",
            "_score": 5,
            "_source": {
              "table_id": "76d1640a-0edd-4d3d-83f0-6443b5f20658",
              "database": "shopify",
              "service": "bigquery",
              "service_type": "BigQuery",
              "service_category": "databaseService",
              "entity_type": "table",
              "table_name": "dim_api_client",
              "suggest": [
                {
                  "input": ["bigquery.shopify.dim_api_client"],
                  "weight": 5
                },
                {
                  "input": ["dim_api_client"],
                  "weight": 10
                }
              ],
              "description": "This dimension table contains a row for each channel or app that your customers use to create orders. Some examples of these include Facebook and Online Store. You can join this table with the sales table to measure channel performance.",
              "table_type": "Regular",
              "last_updated_timestamp": 1637994330,
              "column_names": ["api_client_id", "title"],
              "column_descriptions": [
                "ID of the API client that called the Shopify API. For example, the ID for the online store is 580111.",
                "Full name of the app or channel. For example, Point of Sale, Online Store."
              ],
              "monthly_stats": 85,
              "monthly_percentile_rank": 36,
              "weekly_stats": 85,
              "weekly_percentile_rank": 36,
              "daily_stats": 85,
              "daily_percentile_rank": 36,
              "tags": [],
              "fqdn": "bigquery.shopify.dim_api_client",
              "tier": null,
              "schema_description": null,
              "owner": "",
              "followers": []
            },
            "highlight": {
              "table_name": [
                "<span class=\"text-highlighter\">dim_api_client</span>"
              ]
            }
          },
          {
            "_index": "table_search_index",
            "_type": "_doc",
            "_id": "5832c136-ddcb-4c6e-a9f5-3c22b3cee034",
            "_score": 1,
            "_source": {
              "table_id": "5832c136-ddcb-4c6e-a9f5-3c22b3cee034",
              "database": "shopify",
              "service": "bigquery",
              "service_type": "BigQuery",
              "service_category": "databaseService",
              "entity_type": "table",
              "table_name": "fact_order",
              "suggest": [
                {
                  "input": ["bigquery.shopify.fact_order"],
                  "weight": 5
                },
                {
                  "input": ["fact_order"],
                  "weight": 10
                }
              ],
              "description": "The orders table contains information about each order in your store. Although this table is good for generating order lists and joining with the dim_customer, use the sales table instead for computing financial or other metrics.",
              "table_type": "Regular",
              "last_updated_timestamp": 1637994332,
              "column_names": [
                "order_id",
                "api_client_id",
                "billing_address_id",
                "customer_id",
                "location_id",
                "shipping_address_id",
                "shop_id",
                "user_id",
                "name",
                "total_price",
                "discount_code",
                "processed_at",
                "canceled_at",
                "deleted_at",
                "test"
              ],
              "column_descriptions": [
                "Unique numeric identifier for the order across Shopify stores. In your Shopify admin, this ID is used internally. Most merchants are familiar with the other ID that appears on orders in the Shopify admin. This ID can be found in the Name column.",
                "The ID of the API client that called the Shopify API. This column is a foreign key reference to the api_client_id column in the dim_api_client table.",
                "The ID of the customer. This column is a foreign key reference to the customer_id column in the dim_customer table.",
                "The ID of the store. This column is a foreign key reference to the shop_id column in the dim_shop table.",
                "The ID of the staff member who created the order. This column is a foreign key reference to the ID in the dim_staff table. This column applies to Shopify POS orders and to orders that were converted from draft orders.",
                "The identifier of the order that the merchant and customer sees. This is the ID that appears on the order in the Shopify admin. For example, #1001. By default, this identifier is unique to one store. If you have multiple stores, then use the order_id column to guarantee uniqueness across multiple stores.",
                "The total price of the order, including shipping and taxes. This column includes gift card sales, but does not include returns. This value may not be accurate for API-imported orders. Do not use this column for financial calculations. Instead, use the total_price column in the sales table.",
                "The discount code that was applied to the order.",
                "The date (ISO 8601) and time (UTC) when the order was created. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
                "If the order was canceled, then this column contains the date (ISO 8601) and time (UTC) when the order was canceled. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
                "If the order was deleted, then this column contains the date (ISO 8601) and time (UTC) when the order was deleted. The format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).",
                "True when the order is a test order, False otherwise."
              ],
              "monthly_stats": 185,
              "monthly_percentile_rank": 73,
              "weekly_stats": 185,
              "weekly_percentile_rank": 73,
              "daily_stats": 185,
              "daily_percentile_rank": 73,
              "tags": [],
              "fqdn": "bigquery.shopify.fact_order",
              "tier": null,
              "schema_description": null,
              "owner": "",
              "followers": []
            },
            "highlight": {
              "column_descriptions": [
                "This column is a foreign key reference to the api_client_id column in the <span class=\"text-highlighter\">dim_api_client</span> table."
              ]
            }
          },
          {
            "_index": "table_search_index",
            "_type": "_doc",
            "_id": "15954e8e-8cfc-49e5-aed0-42b11c5511da",
            "_score": 1,
            "_source": {
              "table_id": "15954e8e-8cfc-49e5-aed0-42b11c5511da",
              "database": "shopify",
              "service": "bigquery",
              "service_type": "BigQuery",
              "service_category": "databaseService",
              "entity_type": "table",
              "table_name": "fact_sale",
              "suggest": [
                {
                  "input": ["bigquery.shopify.fact_sale"],
                  "weight": 5
                },
                {
                  "input": ["fact_sale"],
                  "weight": 10
                }
              ],
              "description": "The fact table captures the value of products sold or returned, as well as the values of other charges such as taxes and shipping costs. The sales table contains one row per order line item, one row per returned line item, and one row per shipping charge. Use this table when you need financial metrics.",
              "table_type": "Regular",
              "last_updated_timestamp": 1638166544367,
              "column_names": [
                "sale_id",
                "billing_address_id",
                "api_client_id",
                "customer_id",
                "line_item_id",
                "location_id",
                "order_id",
                "product_id",
                "product_variant_id",
                "shipping_address_id",
                "shop_id",
                "user_id",
                "gross_sales",
                "net_sales",
                "total_sales",
                "returns",
                "discounts",
                "shipping",
                "taxes",
                "gift_card_discounts",
                "gift_card_gross_sales",
                "gift_cards_issued",
                "quantity",
                "currency",
                "is_deleted",
                "test",
                "happened_at"
              ],
              "column_descriptions": [
                "ID of the sale row. This column is the primary key for this table.",
                "ID of the billing address of the customer. This column is a foreign key reference to the address_id column in the dim_address table.",
                "ID of the API client from which the adjustment was made. This column is a foreign key reference to the ID of the API client in the dim_api_client table.",
                "ID of the customer. This column is a foreign key reference to the customer_id column in the dim_customer table.",
                "ID of the line item. This column is a foreign key reference to line_item_id column in the fact_line_item table. When the row describes a shipping charge, there is no line_item_id value.",
                "ID of the Shopify POS location. This column is a foreign key reference to the location_id column in the dim_location table. When the order is not a POS order, then there is no location ID.",
                "ID of the order. This column is a foreign key reference to order_id column in the fact_order table.",
                "ID of the product sold or returned. This column is a foreign key reference to the product_id column in the dim_product table. When the line item describes a shipping charge, then there is no product ID.",
                "ID of the product variant sold or returned. This column is a foreign key reference to the product_variant_id column in the dim_product_variant table. When the row describes a shipping charge, then there is no product variant ID.",
                "ID of the shipping address of the customer who made the order. This column is a foreign key reference to the address_id column in the dim_address table. Some sales, such as those made using Shopify POS, do not have a customer's shipping address associated with them.",
                "ID of your store. This column is a foreign key reference to the shop_id column in the dim_shop table.",
                "ID of the staff member who is associated with the sale. This column is a foreign key reference to the user_id column in the dim_staff table. Not all sales have a staff member associated with them.",
                "Price of the product purchased multiplied by the quantity ordered. This value is formatted in the currency of your store. If the product purchased is a gift card, then 0 is returned because gift cards are not included in gross sales calculations. The gross sales amount also does not include any discounts, returns, taxes or shipping charges. The gross_sales column is calculated using the following formula: product (excluding gift cards) price x quantity (before taxes, shipping, discounts, and returns). Canceled, pending, and unpaid orders will have a value for this column, but test and deleted orders will not.",
                "Net sales of the line item. The value of the line item's gross sales minus any discounts minus the value of any returned items. Net sales does not include taxes or shipping costs, or the sale of gift cards. If the line item contains gift cards, then the field contains 0. Net sales is calculated by using the following formula: gross_sales - discounts - returns.",
                "Total sales of the line item. This value does not include gift cards. Total sales is calculated using the following formula: net_sales + shipping + taxes.",
                "Value of the products returned by the customer regardless of the amount that the merchant actually receives from the customer. This value is usually a negative number, but it can also be zero (for example, if the item being returned was a free gift with purchase). Taxes and shipping charges are not included. The returns amount is calculated by using the following formula: 0 - (product variant price * quantity) + discounts.",
                "Total amount discounted from the line item. The discounts column contains the sum of any line item discounts plus the line item's portion of any order-level discount. The value of the discount is either negative or zero. The discounts column is calculated using the following formula: line item discount + order level discount share.",
                "When the line item is for a shipping charge, this column contains the amount charged for shipping the order or the amount of the shipping charge that is refunded when an item is returned. This value is positive for a shipping charge, and negative for the value returned. Any applicable taxes charged for shipping costs are recorded in the Taxes column. This column is calculated using the following formula: shipping charge or refund - shipping discount..",
                "The amount of taxes charged or returned for the line item. This value will be positive for a sale and negative for a return. Tax on an order is split proportionally amongst the line items to which it applies. Gift cards are not taxed. If multiple taxes are applied (for example, State and City sales taxes), then this column contains the sum of those tax amounts. This column can include taxes charged on shipping, if they are applicable.",
                "Total amount discounted from gift card sales. For example, if a $50 gift card is sold at a $10 discount for $40, then this column will contain $10.",
                "Total face value of gift cards sold. For example, a $50 gift card is sold at a $10 discount for $40. In this example, the gift_card_gross_sales column will contain $50. Use this column to measure the increase in liabilities due to gift cards being issued (even though this value will not balance against the actual payments that you receive).",
                "Net amount that the gift cards sold for, after discounts. For example, for a $50 gift card sold at a $10 discount for $40, this column will contain $40. Use this column to balance against the payments that you receive.",
                "Quantity of the items sold or returned. This value will be negative for returns and zero for line items that contain shipping charges.",
                "Three-letter ISO currency code of the payment. For example, USD is the code for United States Dollar. This is the currency of the store at the time of the order.",
                "Contains 1 when the sale's order was deleted, otherwise contains 0.",
                "Whether the sale is a test order. Returns True when the sale is a test sale. See Test orders.",
                "Date (ISO 8601) and time (UTC) when the order was created for a sale or when the order was returned."
              ],
              "monthly_stats": 400,
              "monthly_percentile_rank": 91,
              "weekly_stats": 400,
              "weekly_percentile_rank": 91,
              "daily_stats": 400,
              "daily_percentile_rank": 91,
              "tags": [
                "PII.Sensitive",
                "PersonalData.Personal",
                "User.CreditCardNumber"
              ],
              "fqdn": "bigquery.shopify.fact_sale",
              "tier": "Tier.Tier1",
              "schema_description": null,
              "owner": "",
              "followers": []
            },
            "highlight": {
              "column_descriptions": [
                "This column is a foreign key reference to the address_id column in the <span class=\"text-highlighter\">dim_address</span> table.",
                "This column is a foreign key reference to the ID of the API client in the <span class=\"text-highlighter\">dim_api_client</span> table.",
                "This column is a foreign key reference to the address_id column in the <span class=\"text-highlighter\">dim_address</span> table."
              ]
            }
          }
        ]
      },
      "aggregations": {
        "sterms#EntityType": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "table",
              "doc_count": 4
            }
          ]
        },
        "sterms#ServiceCategory": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "databaseService",
              "doc_count": 4
            }
          ]
        },
        "sterms#Tier": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "Tier.Tier1",
              "doc_count": 1
            }
          ]
        },
        "sterms#Service": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "BigQuery",
              "doc_count": 4
            }
          ]
        },
        "sterms#Tags": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "PII.Sensitive",
              "doc_count": 1
            },
            {
              "key": "PersonalData.Personal",
              "doc_count": 1
            },
            {
              "key": "User.CreditCardNumber",
              "doc_count": 1
            }
          ]
        }
      }
    },
    "status": 200,
    "statusText": "OK",
    "headers": {
      "connection": "close",
      "content-encoding": "gzip",
      "content-type": "application/json",
      "date": "Mon, 29 Nov 2021 12:18:24 GMT",
      "transfer-encoding": "chunked",
      "vary": "Accept-Encoding",
      "x-powered-by": "Express"
    },
    "config": {
      "url": "/search/query?q=*dim_a*&from=0&size=10&sort_order=desc&index=table_search_index",
      "method": "get",
      "headers": {
        "Accept": "application/json, text/plain, */*"
      },
      "baseURL": "/api/v1",
      "transformRequest": [null],
      "transformResponse": [null],
      "timeout": 0,
      "xsrfCookieName": "XSRF-TOKEN",
      "xsrfHeaderName": "X-XSRF-TOKEN",
      "maxContentLength": -1,
      "maxBodyLength": -1
    },
    "request": {}
  },
  "resAggServiceType": {
    "data": {
      "took": 31,
      "timed_out": false,
      "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
      },
      "hits": {
        "total": {
          "value": 4,
          "relation": "eq"
        },
        "max_score": null,
        "hits": []
      },
      "aggregations": {
        "sterms#EntityType": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "table",
              "doc_count": 4
            }
          ]
        },
        "sterms#ServiceCategory": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "databaseService",
              "doc_count": 4
            }
          ]
        },
        "sterms#Tier": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "Tier.Tier1",
              "doc_count": 1
            }
          ]
        },
        "sterms#Service": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "BigQuery",
              "doc_count": 4
            }
          ]
        },
        "sterms#Tags": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "PII.Sensitive",
              "doc_count": 1
            },
            {
              "key": "PersonalData.Personal",
              "doc_count": 1
            },
            {
              "key": "User.CreditCardNumber",
              "doc_count": 1
            }
          ]
        }
      }
    },
    "status": 200,
    "statusText": "OK",
    "headers": {
      "connection": "close",
      "content-encoding": "gzip",
      "content-length": "325",
      "content-type": "application/json",
      "date": "Mon, 29 Nov 2021 12:18:24 GMT",
      "vary": "Accept-Encoding",
      "x-powered-by": "Express"
    },
    "config": {
      "url": "/search/query?q=*dim_a*&from=0&size=0&sort_order=desc&index=table_search_index",
      "method": "get",
      "headers": {
        "Accept": "application/json, text/plain, */*"
      },
      "baseURL": "/api/v1",
      "transformRequest": [null],
      "transformResponse": [null],
      "timeout": 0,
      "xsrfCookieName": "XSRF-TOKEN",
      "xsrfHeaderName": "X-XSRF-TOKEN",
      "maxContentLength": -1,
      "maxBodyLength": -1
    },
    "request": {}
  },
  "resAggTier": {
    "data": {
      "took": 9,
      "timed_out": false,
      "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
      },
      "hits": {
        "total": {
          "value": 4,
          "relation": "eq"
        },
        "max_score": null,
        "hits": []
      },
      "aggregations": {
        "sterms#EntityType": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "table",
              "doc_count": 4
            }
          ]
        },
        "sterms#ServiceCategory": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "databaseService",
              "doc_count": 4
            }
          ]
        },
        "sterms#Tier": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "Tier.Tier1",
              "doc_count": 1
            }
          ]
        },
        "sterms#Service": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "BigQuery",
              "doc_count": 4
            }
          ]
        },
        "sterms#Tags": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "PII.Sensitive",
              "doc_count": 1
            },
            {
              "key": "PersonalData.Personal",
              "doc_count": 1
            },
            {
              "key": "User.CreditCardNumber",
              "doc_count": 1
            }
          ]
        }
      }
    },
    "status": 200,
    "statusText": "OK",
    "headers": {
      "connection": "close",
      "content-encoding": "gzip",
      "content-length": "326",
      "content-type": "application/json",
      "date": "Mon, 29 Nov 2021 12:18:24 GMT",
      "vary": "Accept-Encoding",
      "x-powered-by": "Express"
    },
    "config": {
      "url": "/search/query?q=*dim_a*&from=0&size=0&sort_order=desc&index=table_search_index",
      "method": "get",
      "headers": {
        "Accept": "application/json, text/plain, */*"
      },
      "baseURL": "/api/v1",
      "transformRequest": [null],
      "transformResponse": [null],
      "timeout": 0,
      "xsrfCookieName": "XSRF-TOKEN",
      "xsrfHeaderName": "X-XSRF-TOKEN",
      "maxContentLength": -1,
      "maxBodyLength": -1
    },
    "request": {}
  },
  "resAggTag": {
    "data": {
      "took": 9,
      "timed_out": false,
      "_shards": {
        "total": 1,
        "successful": 1,
        "skipped": 0,
        "failed": 0
      },
      "hits": {
        "total": {
          "value": 4,
          "relation": "eq"
        },
        "max_score": null,
        "hits": []
      },
      "aggregations": {
        "sterms#EntityType": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "table",
              "doc_count": 4
            }
          ]
        },
        "sterms#ServiceCategory": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "databaseService",
              "doc_count": 4
            }
          ]
        },
        "sterms#Tier": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "Tier.Tier1",
              "doc_count": 1
            }
          ]
        },
        "sterms#Service": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "BigQuery",
              "doc_count": 4
            }
          ]
        },
        "sterms#Tags": {
          "doc_count_error_upper_bound": 0,
          "sum_other_doc_count": 0,
          "buckets": [
            {
              "key": "PII.Sensitive",
              "doc_count": 1
            },
            {
              "key": "PersonalData.Personal",
              "doc_count": 1
            },
            {
              "key": "User.CreditCardNumber",
              "doc_count": 1
            }
          ]
        }
      }
    },
    "status": 200,
    "statusText": "OK",
    "headers": {
      "connection": "close",
      "content-encoding": "gzip",
      "content-length": "326",
      "content-type": "application/json",
      "date": "Mon, 29 Nov 2021 12:18:24 GMT",
      "vary": "Accept-Encoding",
      "x-powered-by": "Express"
    },
    "config": {
      "url": "/search/query?q=*dim_a*&from=0&size=0&sort_order=desc&index=table_search_index",
      "method": "get",
      "headers": {
        "Accept": "application/json, text/plain, */*"
      },
      "baseURL": "/api/v1",
      "transformRequest": [null],
      "transformResponse": [null],
      "timeout": 0,
      "xsrfCookieName": "XSRF-TOKEN",
      "xsrfHeaderName": "X-XSRF-TOKEN",
      "maxContentLength": -1,
      "maxBodyLength": -1
    },
    "request": {}
  }
}
