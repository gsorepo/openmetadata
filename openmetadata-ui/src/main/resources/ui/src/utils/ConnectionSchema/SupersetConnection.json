{
  "$id": "https://open-metadata.org/schema/entity/services/connections/dashboard/supersetConnection.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "SupersetConnection",
  "description": "Superset Connection Config",
  "type": "object",
  "javaType": "org.openmetadata.schema.services.connections.dashboard.SupersetConnection",
  "definitions": {
    "supersetType": {
      "description": "Superset service type",
      "type": "string",
      "enum": ["Superset"],
      "default": "Superset"
    }
  },
  "properties": {
    "type": {
      "title": "Service Type",
      "description": "Service Type",
      "$ref": "#/definitions/supersetType",
      "default": "Superset"
    },
    "hostPort": {
      "expose": true,
      "title": "Host and Port",
      "description": "URL for the superset instance.",
      "type": "string",
      "format": "uri",
      "default": "http://localhost:8088"
    },
    "connection": {
      "title": "Superset Connection",
      "description": "Choose between API or database connection fetch metadata from superset.",
      "type": "object",
      "oneOf": [
        {
          "$id": "https://open-metadata.org/schema/entity/services/connections/dashboard/SupersetApiConnection.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "SupersetApiConnection",
          "description": "Superset API Connection Config",
          "type": "object",
          "properties": {
            "provider": {
              "title": "Provider",
              "description": "Authentication provider for the Superset service. For basic user/password authentication, the default value `db` can be used. This parameter is used internally to connect to Superset's REST API.",
              "type": "string",
              "enum": ["db", "ldap"],
              "default": "db"
            },
            "username": {
              "title": "Username",
              "description": "Username for Superset.",
              "type": "string"
            },
            "password": {
              "title": "Password",
              "description": "Password for Superset.",
              "type": "string",
              "format": "password"
            }
          },
          "required": ["provider", "username", "password"]
        },
        {
          "$id": "https://open-metadata.org/schema/entity/services/connections/database/postgresConnection.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "PostgresConnection",
          "description": "Postgres Database Connection Config",
          "type": "object",
          "javaType": "org.openmetadata.schema.services.connections.database.PostgresConnection",
          "properties": {
            "type": {
              "title": "Service Type",
              "description": "Service type.",
              "type": "string",
              "enum": ["Postgres"],
              "default": "Postgres"
            },
            "scheme": {
              "title": "Connection Scheme",
              "description": "SQLAlchemy driver scheme options.",
              "type": "string",
              "enum": ["postgresql+psycopg2"],
              "default": "postgresql+psycopg2"
            },
            "username": {
              "title": "Username",
              "description": "Username to connect to Postgres. This user should have privileges to read all the metadata in Postgres.",
              "type": "string"
            },
            "password": {
              "title": "Password",
              "description": "Password to connect to Postgres.",
              "type": "string",
              "format": "password"
            },
            "hostPort": {
              "title": "Host and Port",
              "description": "Host and port of the Postgres service.",
              "type": "string"
            },
            "database": {
              "title": "Database",
              "description": "Database of the data source. This is optional parameter, if you would like to restrict the metadata reading to a single database. When left blank, OpenMetadata Ingestion attempts to scan all the databases.",
              "type": "string"
            },
            "sslMode": {
              "title": "SSL Mode",
              "description": "SSL Mode to connect to postgres database.",
              "enum": [
                "disable",
                "allow",
                "prefer",
                "require",
                "verify-ca",
                "verify-full"
              ],
              "default": "disable"
            },
            "classificationName": {
              "title": "Classification Name",
              "description": "Custom OpenMetadata Classification name for Postgres policy tags.",
              "type": "string",
              "default": "PostgresPolicyTags"
            },
            "ingestAllDatabases": {
              "title": "Ingest All Databases",
              "description": "Ingest data from all databases in Postgres. You can use databaseFilterPattern on top of this.",
              "type": "boolean",
              "default": false
            }
          },
          "additionalProperties": false,
          "required": ["hostPort", "username", "database"]
        },

        {
          "$id": "https://open-metadata.org/schema/entity/services/connections/database/mysqlConnection.json",
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "MysqlConnection",
          "description": "Mysql Database Connection Config",
          "type": "object",
          "javaType": "org.openmetadata.schema.services.connections.database.MysqlConnection",
          "properties": {
            "type": {
              "title": "Service Type",
              "description": "Service type.",
              "type": "string",
              "enum": ["Mysql"],
              "default": "Mysql"
            },
            "scheme": {
              "title": "Connection Scheme",
              "description": "SQLAlchemy driver scheme options.",
              "type": "string",
              "enum": ["mysql+pymysql"],
              "default": "mysql+pymysql"
            },
            "username": {
              "title": "Username",
              "description": "Username to connect to MySQL. This user should have privileges to read all the metadata in Mysql.",
              "type": "string"
            },
            "password": {
              "title": "Password",
              "description": "Password to connect to MySQL.",
              "type": "string",
              "format": "password"
            },
            "hostPort": {
              "title": "Host and Port",
              "description": "Host and port of the MySQL service.",
              "type": "string"
            },
            "databaseName": {
              "title": "Database Name",
              "description": "Optional name to give to the database in OpenMetadata. If left blank, we will use default as the database name.",
              "type": "string"
            },
            "databaseSchema": {
              "title": "Database Schema",
              "description": "Database Schema of the data source. This is optional parameter, if you would like to restrict the metadata reading to a single schema. When left blank, OpenMetadata Ingestion attempts to scan all the schemas.",
              "type": "string"
            },
            "sslCA": {
              "title": "SSL CA",
              "description": "Provide the path to ssl ca file",
              "type": "string"
            },
            "sslCert": {
              "title": "SSL Client Certificate File",
              "description": "Provide the path to ssl client certificate file (ssl_cert)",
              "type": "string"
            },
            "sslKey": {
              "title": "SSL Client Key File",
              "description": "Provide the path to ssl client certificate file (ssl_key)",
              "type": "string"
            },

            "supportsMetadataExtraction": {
              "title": "Supports Metadata Extraction",
              "description": "Supports Metadata Extraction.",
              "type": "boolean",
              "default": true
            }
          },
          "additionalProperties": false,
          "required": ["hostPort", "username"]
        }
      ]
    },
    "supportsMetadataExtraction": {
      "title": "Supports Metadata Extraction",
      "description": "Supports Metadata Extraction.",
      "type": "boolean",
      "default": true
    }
  },
  "additionalProperties": false,
  "required": ["hostPort", "connection"]
}
